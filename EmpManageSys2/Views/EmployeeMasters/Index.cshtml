@model EmpManageSys2.ViewModel.PaginatedList

@* @model EmpManageSys2.ViewModel.PaginatedList<EmployeeMaster> *@

@{
    ViewData["Title"] = "Index";
    var NotificationMessage = ViewBag.Notmsg;
}

<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Your Page</title>
    <link href="~/css/Style.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdn.datatables.net/2.0.0/css/dataTables.bootstrap.css">
    <script src="https://code.jquery.com/jquery-3.7.1.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
    <script src="https://cdn.datatables.net/2.0.0/js/dataTables.js"></script>
    <script src="https://cdn.datatables.net/2.0.0/js/dataTables.js"></script>
    <script src="https://cdn.datatables.net/2.0.0/js/dataTables.bootstrap.js"></script>

    <script src="~/js/index.js"></script>
</head>
<body>
    <input hidden id="MsgData" value="@NotificationMessage" />
    <form asp-action="Index" method="get">
        <div style="display:flex; justify-content:space-between">
            <p>
                <strong>Find by name or email:</strong> <input type="text" name="searchTerm" value="@Model.SearchTerm" />
                <input type="submit" value="Search" />

            <p>
        </div>

    </form>

    <table class="table table-responsive-sm">
        <thead>
            <tr>
                <th>
                    @Html.ActionLink("Email Address", "Index", new { sortOrder = String.IsNullOrEmpty(Model.SortOrder) ? "Email Address" : "" })
                </th>
                <th>
                    @Html.ActionLink("Country", "Index", new { sortOrder = Model.SortOrder == "Country" ? "Country" : "Country" })
                </th>
                <th>
                    @Html.ActionLink("State", "Index", new { sortOrder = Model.SortOrder == "State" ? "State" : "State" })
                </th>
                <th>
                    @Html.ActionLink("City", "Index", new { sortOrder = Model.SortOrder == "City" ? "City" : "City" })
                </th>
                <th>
                    @Html.ActionLink("Pan Number", "Index", new { sortOrder = Model.SortOrder == "Pan Number" ? "Pan Number" : "Pan Number" })
                </th>
                <th>
                    @Html.ActionLink("Passport Number", "Index", new { sortOrder = Model.SortOrder == "Passport Number" ? "Passport Number" : "Passport Number" })
                </th>
                <th>
                    @Html.ActionLink("Gender", "Index", new { sortOrder = Model.SortOrder == "Gender" ? "Gender" : "Gender" })
                </th>
                <th>
                    @Html.ActionLink("Is Active", "Index", new { sortOrder = Model.SortOrder == "Is Active" ? "Is Active" : "Is Active" })
                </th>
                <th>
                    @Html.ActionLink("Profile Image", "Index", new { sortOrder = Model.SortOrder == "Profile Image" ? "Profile Image" : "Profile Image" })
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.employeeMasters)
            {
                <tr>
                    <td style="padding-top:50px">@item.EmailAddress</td>
                    <td style="padding-top:50px">@item.Contry?.CountryName</td>
                    <td style="padding-top:50px">@item.State?.StateName</td>
                    <td style="padding-top:50px">@item.City?.CityName</td>
                    <td style="padding-top:50px">@item.PanNumber</td>
                    <td style="padding-top:50px">@item.PassportNumber</td>
                    <td style="padding-top:50px">
                        @* @Html.DisplayFor(modelItem => item.Gender==1 ? "Male" : "Female") *@
                        @if (item.Gender == 1)
                        {
                            <span>Male</span>
                        }
                        else
                        {
                            <span>Female</span>
                        }
                    </td>
                    <td style="padding-top:50px">
                        @if (item.IsActive == true)
                        {
                            <span>Yes</span>
                        }
                        else
                        {
                            <span>No</span>
                        }
                        @* @Html.DisplayFor(modelItem => item.IsActive) *@
                    </td>
                    <td>
                        @if (item.ProfileImage != null)
                        {
                            <img width="100" , height="100" src="~/uploads/@item.ProfileImage" />
                        }
                        else
                        {
                            <p>No Profile Photo</p>
                        }

                    </td>


                    <td style="padding-top:30px">
                        <a style="width:65px" class="btn btn-secondary" asp-action="Edit" asp-route-id="@item.RowId">Edit</a>
                        <br />
                        <form method="post">
                            <button type="button" class="btn btn-danger" onclick="confirmDelete(@item.RowId)">Delete</button>
                        </form>

                    </td>
                </tr>
            }
        </tbody>
    </table>

    <p>
        <input type="submit" class="btn btn-secondary" value="Add Employee" onclick="location.href='@Url.Action("Create", "EmployeeMasters")'" />
    </p>

    @* <div>
    Page @(Model.PageIndex) of @(Model.TotalPages)

    @if (Model.PageIndex > 1)
    {
    <a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex - 1)" asp-route-searchTerm="@Model.SearchTerm" asp-route-sortOrder="@Model.SortOrder">Previous</a>
    }
    @if (Model.PageIndex < Model.TotalPages)
    {
    <a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex + 1)" asp-route-searchTerm="@Model.SearchTerm" asp-route-sortOrder="@Model.SortOrder">Next</a>
    }
    </div> *@

    <div>
        <nav aria-label="Page navigation">
            <ul class="pagination">
                @if (Model.HasPreviousPage)
                {
                    <li class="page-item">
                        <a class="page-link" asp-action="Index" asp-route-pageNumber="@(Model.PageIndex - 1)">Previous</a>
                    </li>
                }
                else
                {
                    <li class="page-item disabled">
                        <a class="page-link">Previous</a>
                    </li>
                }

                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                        <a class="page-link" asp-action="Index" asp-route-pageNumber="@i">@i</a>
                    </li>
                }

                @if (Model.HasNextPage)
                {
                    <li class="page-item">
                        <a class="page-link" asp-action="Index" asp-route-pageNumber="@(Model.PageIndex + 1)">Next</a>
                    </li>
                }
                else
                {
                    <li class="page-item disabled">
                        <a class="page-link">Next</a>
                    </li>
                }
            </ul>
        </nav>
    </div>



    @* <script>

    </script> *@

</body>
</html>
